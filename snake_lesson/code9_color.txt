=====main.py===============
import pygame
import time
from snake import Snake
from color import Color

# define variables
everything_ok = True
board_color = pygame.Color(50, 153, 213)

clock = pygame.time.Clock()
snake = Snake()

#init
pygame.init()
dis = pygame.display.set_mode((400, 300))
pygame.display.set_caption('Snake Game by a genius')

font_style = pygame.font.SysFont("bahnschrift", 25)

def message(text, colour):
    messge = font_style.render(text, True, colour)
    dis.blit(messge, [200, 100])

#background color
dis.fill(board_color)
pygame.display.flip()

#game loop
while everything_ok:
    for event in pygame.event.get():
        #check quit
        if event.type == pygame.QUIT:
            game_over = True
        #check key
        if event.type == pygame.KEYDOWN:
            snake.changeDirection(event)

    # draw snake head
    dis.fill(board_color)
    everything_ok = snake.draw(dis, pygame.Color('black'))

    pygame.display.update()

    clock.tick(15)

#show message
message("You lost", pygame.Color('red'))
pygame.display.update()
time.sleep(5)

#quit
pygame.quit()
quit()

========== snake.py ==============
import pygame

class Snake:
    speed = 15
    blockSize = 10
    x = 200
    y = 150
    x_change = 0
    y_change = 0

    def changeDirection(self, event):
        if event.key == pygame.K_LEFT:
            self.x_change = -10
            self.y_change = 0
        elif event.key == pygame.K_RIGHT:
            self.x_change = 10
            self.y_change = 0
        elif event.key == pygame.K_UP:
            self.y_change = -10
            self.x_change = 0
        elif event.key == pygame.K_DOWN:
            self.y_change = 10
            self.x_change = 0

    def draw(self, gameboard, color):
        # get new x,y
        self.x += self.x_change
        self.y += self.y_change

        # boundary checking
        if self.x >= 400 or self.x < 0 or self.y >= 300 or self.y < 0:
            return False

        pygame.draw.rect(gameboard, color, [self.x, self.y, self.blockSize, self.blockSize])
        return True